## 자료 구조가 중요한 까닭

저는 자료 구조와 알고리즘에 대한 개념자체가 없습니다.

조금 더 효율적이고 좋은 코드를 만들기 위해 자료 구조와 알고리즘을 공부 해야겠다는 생각으로 자료 구조와 알고리즘에 대해 공부하기 시작했습니다.

본격적으로 자료 구조와 알고리즘에 학습하기 전에 자료 구조가 왜 중요한지 알아야 할 것 같았습니다.

---

코딩을 처음 배울 때는 우선 올바르게 돌아가게 하는 것이 목표이며 또한 **목표여야** 한다고 생각합니다.

‘코드가 실제로 동작하는가?’라는 단순한 기준으로 코드를 평가하기 때문입니다.

하지만 경험이 쌓이면서 소프트웨어 공학자는 **코드 품질** 측면에서 또 다른 계층들과 미묘한 차이를 익혀 나가기 시작합니다.

즉, 같은 일을 해내더라도 두 코드 중 한 코드가 더 나을 수 있음을 배우게 됩니다.

코드 품질은 다양한 척도로 평가할 수 있다고 합니다.

한 가지 중요한 척도가 코드 유지 보수성입니다.

코드 유지 보수성은 가독성, 조직, 코드 모듈성 같은 측면을 포함합니다.

하지만 고품질 코드에는 또 다른 측면이 있는데 바로 **********************************************코드 효율성********************************************** 입니다.

예를 들어 같은 목표를 달성해도 두 코드 중 하나가 더 빠르게 실행될 수 있습니다.

2부터 100 사이의 짝수를 출력하는 아래의 두 함수를 살펴봅시다.

```swift
func printNumbersVersionOne() {
	var number = 2
	
	while number <= 100 {
		// number가 짝수면 출력합니다.
		if number % 2 == 0 {
			print(number)
			number += 1
		}
	}
}

func printNumberVersionTwo() {
	var number = 2

	while number <= 100 {
		print(number)
		// 정의에 따라 다음 짝수로 2씩 증가시킵니다.
		number += 2
	}
}
```

위 코드를 보았을 때 어느 함수가 더 빨리 실행될까요?

두 번째 버전이 정답입니다.

첫 번째 버전은 루프를 100번 돌고 끝나지만 두 번째 루프는 50번만 돌기 때문입니다.

따라서 첫 번째 버전이 두 번째 버전보다 두 배 더 많은 단계를 거친다고 볼 수 있습니다.


> 📖 뛰어난 소프트웨어 개발자로 거듭나려면 더 빠르게 실행되는 코드 작성 능력을 갖추어야 합니다.
빠른 코드를 작성하는 첫 번째 단계는 자료 구조가 무엇인지, 다양한 자료 구조가 코드 속도에 어떤 영향을 미치는지 이해하는 것 입니다.
